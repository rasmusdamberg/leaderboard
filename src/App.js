import React, { useState, useEffect } from 'react';
import axios from 'axios';
import Leaderboard from './Leaderboard';

const App = () => {
  const [leaderboards, setLeaderboards] = useState([]);
  const [selectedGame, setSelectedGame] = useState('daily');

  useEffect(() => {
    const fetchLeaderboards = async () => {
      try {
        const response = await axios.get('https://api.chess.com/pub/leaderboards');
        setLeaderboards(response.data);
      } catch (error) {
        console.error('Error fetching data:', error);
      }
    };
    fetchLeaderboards();
  }, []);

  const handleGameChange = (event) => {
    setSelectedGame(event.target.value);
  };

  return (
    <div>
      <div className="flex justify-center items-center h-[100px] border-b-4 border-blue mb-8">
        <a href='/'>
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 253 27" className='h-[40px]'>
            <g fill="#000" fill-rule="nonzero">
              <path d="M9.953 18.184h1.767l-5.116-6.046v6.046h1.86v3.488H0v-3.488h1.581V5.394H0v-3.72h8.464v3.72h-1.86v5.814l5.953-5.813H9.953v-3.72h8.743v3.72h-1.395l-5.767 5.627 6.092 7.162h1.21v3.488H9.952zM20.091 6.325h5.442s.837 1.767.837 4.14v.697c.697-4.046 2.465-5.116 4.185-5.116.791 0 1.256.419 1.489.79v3.954c-3.581-.047-5.535.93-5.535 4.79v2.604h2.233v3.488h-8.65v-3.488h1.44v-7.72h-1.44V6.325zM33.206 6.325h6.511v11.86h1.535v3.487h-8.046v-3.488h1.581v-7.72h-1.58V6.325zm1.349-3.628c0-1.488 1.21-2.697 2.65-2.697 1.443 0 2.605 1.21 2.605 2.697 0 1.442-1.209 2.605-2.604 2.605-1.442 0-2.651-1.163-2.651-2.605zM50.553 9.069a18.023 18.023 0 00-1.58-.093c-1.582 0-2.28.558-2.28 1.488 0 .698.28.977.93 1.116 1.396.372 3.86.326 5.395 1.21 1.535.837 2.047 2.092 2.047 3.813 0 3.581-2.512 5.441-6.604 5.441-2.744 0-4.744-.697-5.86-1.627v-3.395h3.86v1.767c.558.093 1.163.14 1.767.14 1.767 0 2.512-.466 2.512-1.535 0-.698-.466-.977-1.024-1.163-1.07-.325-3.348-.325-4.93-1.163-1.534-.79-2.092-2.232-2.092-3.953 0-3.906 3.023-5.209 6.325-5.209 2.511 0 4.464.652 5.348 1.396v3.395h-3.814V9.069zM57.809 17.115V9.72h-1.907V6.976c2.604-.279 3.302-1.674 4-4.697h2.836v4.046h4.326V9.72h-4.326v6.232c0 1.767.698 2.418 2.465 2.418.698 0 1.303-.14 1.86-.325v2.418c-.557.79-1.813 1.581-4.139 1.581-2.557 0-5.115-1.162-5.115-4.93zM68.133 13.999c0-5.116 3.349-8.046 7.674-8.046 4.558 0 6.93 2.697 6.93 6.464 0 1.117-.233 1.954-.512 2.512h-9.069c.186 2.697 1.72 3.302 4.418 3.302 1.907 0 3.442-.419 4.372-.884v2.651c-.698.977-2.744 2-5.767 2-5.162 0-8.046-2.79-8.046-8zm4.977-1.256h5.115v-.326c0-2.325-.79-3.395-2.372-3.395-1.627 0-2.65 1.21-2.743 3.721zM83.713.605h6.558v17.58h1.535v3.487h-8.093v-3.488h1.581V4.325h-1.58zM93.154 6.325h6.511v11.86h1.535v3.487h-8.046v-3.488h1.581v-7.72h-1.58V6.325zm1.302-3.628C94.456 1.21 95.666 0 97.061 0c1.442 0 2.604 1.21 2.604 2.697 0 1.442-1.209 2.605-2.604 2.605s-2.605-1.163-2.605-2.605zM102.037 23.068c0-1.489 1.535-2.14 3.581-2.419-1.628-.372-2.372-1.302-2.372-2.511 0-1.488 1.21-2.372 3.07-2.884-2-.465-3.302-1.767-3.302-4.418v-.046c0-3.349 3.209-4.837 6.51-4.837 1.024 0 2.512.14 3.35.372h4.976V9.72h-2c.186.233.511.837.511 1.767v.047c0 3.209-2.93 4.418-6.418 4.418h-1.767c-.604 0-1.116.14-1.116.605 0 .465.372.511 1.163.604l4.325.14c3.58.14 5.348 1.395 5.348 4.185v.047c0 3.767-3.209 5.116-8 5.116-4.79 0-7.859-1.116-7.859-3.581zm11.115-.837c0-.791-.511-1.024-1.58-1.07l-3.303-.14c-1.163-.046-1.767.512-1.767 1.116v.047c0 .93.79 1.349 3.023 1.349 2.837 0 3.627-.465 3.627-1.302zm-1.255-11.023v-.465c0-1.535-1.023-2-2.14-2-1.116 0-2.185.465-2.185 2v.465c0 1.86 1.116 2.233 2.185 2.233 1.024 0 2.14-.419 2.14-2.233zM120.92 17.115V9.72h-1.908V6.976c2.605-.279 3.302-1.674 4-4.697h2.837v4.046h4.325V9.72h-4.325v6.232c0 1.767.698 2.418 2.465 2.418.697 0 1.302-.14 1.86-.325v2.418c-.558.79-1.814 1.581-4.14 1.581-2.51 0-5.115-1.162-5.115-4.93zM137.801 1.674h9.58c5.86 0 9.488 3.256 9.488 9.813v.047c0 7.208-4.046 10.092-10.045 10.092H137.8v-3.488h1.582V5.395H137.8v-3.72zm8.697 16.37c3.907 0 5.116-2.092 5.116-5.86v-1.627c0-3.209-1.07-4.883-4.511-4.883h-2.651v12.37h2.046zM159.102 8.139c.744-.79 2.511-2.233 6.232-2.233 4.836 0 6.65 2.419 6.65 6.511v4.93c0 .698.233 1.07.977 1.07.232 0 .325-.047.511-.047v2.93s-.79.605-2.511.605c-2.325 0-3.581-1.116-3.767-2.93-.605 1.907-2.232 3.023-4.558 3.023-2.604 0-4.371-1.535-4.371-4v-.046c0-3.256 2.697-4 5.86-4.744 2.046-.511 2.93-.884 2.93-1.86v-.093c0-1.116-.605-2.047-2.605-2.047-.419 0-.884.047-1.302.093v2.419h-4V8.139h-.046zm7.906 8.092V14c-.465.465-1.023.79-1.767 1.209-1.303.558-2.047 1.07-2.047 2.279v.14c0 1.069.605 1.674 1.675 1.674 1.209.046 2.139-1.07 2.139-3.07zM174.263 23.068c0-1.489 1.535-2.14 3.581-2.419-1.628-.372-2.372-1.302-2.372-2.511 0-1.488 1.21-2.372 3.07-2.884-2-.465-3.302-1.767-3.302-4.418v-.046c0-3.349 3.209-4.837 6.51-4.837 1.024 0 2.512.14 3.35.372h4.976V9.72h-2c.186.233.511.837.511 1.767v.047c0 3.209-2.93 4.418-6.418 4.418h-1.767c-.605 0-1.116.14-1.116.605 0 .465.372.511 1.163.604l4.325.14c3.58.14 5.348 1.395 5.348 4.185v.047c0 3.767-3.209 5.116-8 5.116-4.79 0-7.859-1.116-7.859-3.581zm11.162-.837c0-.791-.512-1.024-1.581-1.07l-3.302-.14c-1.163-.046-1.768.512-1.768 1.116v.047c0 .93.79 1.349 3.023 1.349 2.79 0 3.628-.465 3.628-1.302zm-1.302-11.023v-.465c0-1.535-1.024-2-2.14-2s-2.186.465-2.186 2v.465c0 1.86 1.117 2.233 2.186 2.233 1.07 0 2.14-.419 2.14-2.233zM191.285.605h6.418v9.022c.465-1.674 2.093-3.674 4.93-3.674 3.953 0 6.185 3.209 6.185 7.767v.046c0 5.302-2.65 8.232-6.418 8.232-2.79 0-4.418-1.535-5.116-4.14-.046 2.559-.79 3.768-.79 3.768h-5.21v-3.488h1.442V4.325h-1.441V.605zm12.557 13.533v-.976c0-2.28-1.07-3.675-3.023-3.675-1.814 0-3.116 1.489-3.116 3.954v.604c0 3.116 1.302 4.651 3.116 4.651 1.814-.047 3.023-1.581 3.023-4.558zM209.841.605h6.558v17.58h1.534v3.487h-8.045v-3.488h1.58V4.325h-1.58V.605zM219.98 8.139c.744-.79 2.511-2.233 6.232-2.233 4.837 0 6.65 2.419 6.65 6.511v4.93c0 .698.233 1.07.977 1.07.233 0 .326-.047.512-.047v2.93s-.791.605-2.512.605c-2.325 0-3.58-1.116-3.767-2.93-.605 1.907-2.232 3.023-4.558 3.023-2.604 0-4.371-1.535-4.371-4v-.046c0-3.256 2.697-4 5.86-4.744 2.046-.511 2.93-.884 2.93-1.86v-.093c0-1.116-.605-2.047-2.605-2.047-.418 0-.884.047-1.302.093v2.419h-4.046V8.139zm7.906 8.092V14c-.465.465-1.023.79-1.767 1.209-1.302.558-2.047 1.07-2.047 2.279v.14c0 1.069.605 1.674 1.675 1.674 1.209.046 2.139-1.07 2.139-3.07zM246.489 18.138c-.651 1.907-2.046 3.86-5.162 3.86-3.953 0-6.14-3.349-6.14-8v-.046c0-5.209 2.745-7.953 6.419-7.953 2.837 0 4.185 1.768 4.743 3.489V4.325h-2V.605h6.977v17.58h1.395v3.487h-5.395c0-.046-.79-1.58-.837-3.534zm-.14-3.814v-.558c0-3.023-1.302-4.372-3.116-4.372-1.813 0-3.023 1.396-3.023 3.954v1.023c0 2.604 1.07 4.232 3.023 4.232 1.768-.047 3.116-1.72 3.116-4.279z"></path>
            </g>
          </svg>
        </a>
      </div>
      <div className='max-w-[960px] container mx-auto'>
        <h1 className="text-2xl font-bold mb-4">Chess Leaderboards</h1>
        <div className="mb-4">
          <label htmlFor="game-select" className="mr-2">Select Game:</label>
          <select
            id="game-select"
            value={selectedGame}
            onChange={handleGameChange}
            className="border p-2 rounded cursor-pointer"
          >
            {Object.keys(leaderboards).map(game => (
              <option key={game} value={game}>
                {game.replace('_', ' ')}
              </option>
            ))}
          </select>
        </div>
        {leaderboards[selectedGame] && <Leaderboard players={leaderboards[selectedGame]} />}</div>
    </div>
  );
};

export default App;